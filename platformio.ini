; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = ttgo-lora32-v1

[options]
build_flags =
	-D ARDUINO_LMIC_PROJECT_CONFIG_H_SUPPRESS
	-D CFG_us915=1
	-D LMIC_DEBUG_LEVEL=3
	-D CFG_sx1276_radio=1
	-D DISABLE_PING=1
	-D DISABLE_BEACONS=1
	-D hal_init=LMICHAL_init
	-D USE_ORIGINAL_AES=1
	-D FIRMWARE_VERSION=1.0

lib_deps =
	mcci-catena/MCCI LoRaWAN LMIC library @ ^4.1.1
	electroniccats/CayenneLPP @ ^1.4.0
   tzapu/WiFiManager@^2.0.17
   adafruit/Adafruit MAX1704X@^1.0.3
   fastled/FastLED@^3.9.2

unittesting_buildflag = -D unitTesting
generic_hw_buildflag = -D generic_hw
coverage_buildflag =
  -lgcov
  --coverage
  -fprofile-abs-path
  -Og
platform = espressif32
board = ttgo-lora32-v1
framework = arduino

[env:ttgo-lora32-v1]
monitor_speed = 115200
platform = ${options.platform}
board = ${options.board}
framework = ${options.framework}
build_flags = ${options.build_flags} -std=gnu++14
lib_deps = ${options.lib_deps}

# Native host environment used only for unit testing of platform-independent
# helper functions. This allows running `pio test` on any CI host without
# requiring embedded tool-chains or hardware.
[env:native]
platform = native
build_flags =
  ${options.unittesting_buildflag}
  -std=c++17
  -Itest/stubs
  ${options.coverage_buildflag}
